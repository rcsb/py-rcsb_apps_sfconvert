def write_sf_4_validation(): #can be seen later
    # write a sf file for validation. Add F/sF if missing.
    n = 0
    nf = 0
    sig = 0.01
    fp = "?"
    sigfp = "?"
    flag = ''

    cell = np.zeros(6)
    rcell = np.zeros(6)
    resol = i_sigi = af = afs = 0

    n = sf.nref   #need to see this

    if os.path.exists("SF_4_validate.cif"):
        os.remove("SF_4_validate.cif")

    with open("SF_4_validate.cif", "w") as fout:
        fout.write("data_cif2cif\n#\n")

        # Your original code had some undefined functions and variables.
        # Here are placeholders for the undefined items.
        if CELL[0]>2 and CELL[4]>2:
            cryst_infor(fout, CELL, SYMM , 0)
            calc_recip_cell(CELL, rcell)
        elif sf.a and sf.alpha and sf.beta and sf.sg:
            cell = [float(x) for x in [sf.a, sf.b, sf.c, sf.alpha, sf.beta, sf.gamma]]

            cryst_infor(fout, cell, sf.sg , 0)
            calc_recip_cell(cell, rcell)

        fout.write("\n#\nloop_\n_refln.index_h\n_refln.index_k\n_refln.index_l\n_refln.status\n_refln.F_meas_au\n_refln.F_meas_sigma_au\n_refln.d_spacing\n_refln.I_over_sigI\n")
        
        # ...Rest of your code...

        nf += 1

    INFO = f"\nNumber of reflections for validation set = {nf}"
    pinfo(INFO,0)


